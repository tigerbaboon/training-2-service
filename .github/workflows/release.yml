name: Release
on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        required: true
        description: "Version to release (vM.m.p)"
  pull_request:
    types:
      - closed

jobs:
  release_workflow:
    runs-on: ubuntu-latest
    steps:
      # This step is only run for `generate_pr_summary` step
      # which is only run when the workflow is triggered from the "Run workflow" window
      - id: release_workflow_dry_run
        name: gitflow-workflow-action release workflows
        if: github.event_name == 'workflow_dispatch'
        uses: hoangvvo/gitflow-workflow-action@0.3.6
        with:
          develop_branch: "develop"
          main_branch: "main"
          dry_run: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - id: generate_pr_summary
        name: generate pr summary
        if: ${{ steps.release_workflow_dry_run.outputs.type == 'release' && steps.release_workflow_dry_run.outputs.pull_numbers_in_release }}
        uses: actions/github-script@v7
        with:
          script: |
            const pull_numbers_in_release = "${{ steps.release_workflow_dry_run.outputs.pull_numbers_in_release }}";
            const mergedPrNumbers = Array.from(new Set(pull_numbers_in_release.split(',').map(Number)));
            // Get the PRs and parse the release summary
            const mergedPrs = await Promise.all(mergedPrNumbers.map(async (prNumber) => {
              const pr = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prNumber
              });
              if (!pr.data.body) {
                return "";
              }
              const regex = /\#\# What does this PR do\?([\s\S]*?)\n\#\#/gm;
              let match = regex.exec(pr.data.body)?.[1]?.trim();
              // try to remove empty lines
              match = match?.split('\n').map(s => s.trim()).filter(Boolean).map(
                s => s.startsWith('-') || s.startsWith('*') ? s : `* ${s}`
              ).join('\n');
              return `${pr.data.title}\n${match}`;
            })).then((prs) => prs.filter(Boolean));
            const resultSummary = mergedPrs.join('\n\n');
            return resultSummary;
          result-encoding: string

      - id: release_workflow
        name: gitflow-workflow-action release workflows
        uses: hoangvvo/gitflow-workflow-action@0.3.6
        with:
          develop_branch: "develop"
          main_branch: "main"
          merge_back_from_main: true
          version: ${{ inputs.version }}
          release_summary: ${{ steps.generate_pr_summary.outputs.result }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
